latch：锁；
一句话：线程池 + count：闭锁需要等待的线程数目
count不可更改，且只能设置一次




非常典型的应用场景是：

有一个任务想要往下执行，但必须要等到其他的任务执行完毕后才可以继续往下执行。
假如我们这个想要继续往下执行的任务调用一个CountDownLatch对象的await()方法，
其他的任务执行完自己的任务后调用同一个CountDownLatch对象上的countDown()方法，
这个调用await()方法的任务将一直阻塞等待，直到这个CountDownLatch对象的计数值减到0为止。

线程同步工具
countDownLatch 的伪代码：
1，main 线程 start
2，创建 n 个 countdown的线程
3，Main 线程等待
4，n 个线程完成了工作，并且已经返回数据
5，main 恢复执行